{
	"info": {
		"_postman_id": "0eedd697-b0ab-4f96-bf08-a65a27ac02e1",
		"name": "eCommerse generate",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "User Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fef774b-6ca0-4731-888c-dfbdf703638a",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"email\", jsonData.data.email);\r",
									"    pm.environment.set(\"user_id\", jsonData.data.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a5ceb48-06dc-4de9-b441-0de83092578c",
								"exec": [
									"var jsonData = JSON.parse(pm.request.body)\r",
									"pm.environment.set(\"password\", jsonData.password);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"test@yopmail.com\",\n\t\"password\": \"admin123\",\n\t\"first_name\": \"test1\",\n\t\"last_name\": \"test2\",\n\t\"phone_no\": \"9624914959\",\n\t\"dob\": \"07-01-1998\",\n\t\"gender\": \"male\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resend Confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9442b46-ebe0-4a6d-873c-ae033209a4ac",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9bd5bf87-7c7d-47b7-bb2f-7d10f563a3fa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/confirm-email-resend/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"confirm-email-resend",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resend Confirmation Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc6349b5-bda0-4a95-a68d-903c30115cd4",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b729ad51-a284-41de-8d2f-8d96c9c8a370",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-email-confirm/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-email-confirm",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eab4e3fd-435e-4631-a957-89467e883f34",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0203b695-ad7c-4ad6-b1b2-db67edbf6ab1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Token Refresh",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37a1c317-2088-4010-a618-d2b194d2faf5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95015847-dfab-490d-b026-71f7ce252998",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{refresh_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-token-refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-token-refresh"
							]
						},
						"description": "Refresh token endpoint. This will generate a new access token from\nthe refresh token, but will mark that access token as non-fresh,\nas we do not actually verify a password in this endpoint."
					},
					"response": []
				},
				{
					"name": "User Fresh Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "925be743-bb62-4159-8912-668acc597595",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/fresh-login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"fresh-login"
							]
						},
						"description": "Fresh login endpoint. This is designed to be used if we need to\nmake a fresh token for a user (by verifying they have the\ncorrect username and password). Unlike the standard login endpoint,\nthis will only return a new access token, so that we don't keep\ngenerating new refresh tokens, which entirely defeats their point."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User Roles",
			"item": [
				{
					"name": "Create Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2971b450-2662-488e-b887-0e3aa3027131",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"email\", jsonData.data.email);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/user-roles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Role Assign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c93bb184-1cf2-4065-bd76-811e6d81c8a1",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"email\", jsonData.data.email);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"admin\",\n\t\"users\": [\"shop@gmail.com\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/user-roles-assign",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-roles-assign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5f92e85-1f08-4346-bfdf-796cf77c1d1c",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"email\", jsonData.data.email);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-roles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/roles/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"roles",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc9bcfec-af9d-48c7-b8e6-be4ac81e8831",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"address_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\" : \"shipping\",\n\t\"address_line_1\": \"5, Samarth Park Soc, Ved Gurukul Road\",\n\t\"address_line_2\": \"Surat City\",\n\t\"city\": \"Surat\",\n\t\"state\": \"Gujarat\",\n\t\"country\": \"india\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/address",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "add4b444-7649-4ce3-b24e-081a8f848678",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.type;\r",
									"    pm.expect(type).to.eql(\"shipping\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a44e8f82-2e38-4cb6-b643-f8380946fce4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/address",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4502168c-77a8-4d06-b65e-d1bb87249a89",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.type;\r",
									"    pm.expect(type).to.eql(\"billing\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"{{address_id}}\",\n\t\"type\" : \"billing\",\n\t\"address_line_1\": \"5, Samarth Park Soc, Ved Gurukul Road\",\n\t\"address_line_2\": \"Surat City\",\n\t\"city\": \"Surat\",\n\t\"state\": \"Gujarat\",\n\t\"country\": \"india\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/address",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "978e5439-30e3-4dd6-a2ce-13f58e21cebb",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Clearing the env var\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.environment.unset(\"address_id\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\":\"{{address_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/address",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"address"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Coupon",
			"item": [
				{
					"name": "Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "787dafc2-d26a-4409-941e-efcf4b90940f",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"coupon_code\", jsonData.data.code);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"percentage\",\n\t\"value\": \"10\",\n\t\"max_value\": \"50\",\n\t\"start\": \"2020-05-16T20:00:00\",\n\t\"expire\": \"2020-05-19T20:00:00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/coupon/CODE10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"coupon",
								"CODE10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Coupon Product Mapping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f668c8d-9a0f-45fc-95ff-552ea2a6c355",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"coupon_code\", jsonData.data.code);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"id\",\n    \"product_ids\": [\n        1\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/coupon-product-mapping/{{coupon_code}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"coupon-product-mapping",
								"{{coupon_code}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10f452ec-5c78-4661-b26e-b9cf45385bdc",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.max_value;\r",
									"    pm.expect(type).to.eql(50);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/coupon/{{coupon_code}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"coupon",
								"{{coupon_code}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Coupons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ce5bcee-923a-42bc-979e-8030ad9d75eb",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/coupons",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"coupons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49e4e7af-d43f-417f-b6c5-9dc0f7bfc8d1",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.max_value;\r",
									"    pm.expect(type).to.eql(100);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"percentage\",\n\t\"value\": \"10\",\n\t\"max_value\": \"100\",\n\t\"start\": \"2020-05-16T20:00:00+03:00\",\n\t\"expire\": \"2020-05-19T20:00:00+03:00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/coupon/{{coupon_code}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"coupon",
								"{{coupon_code}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "126f139d-5087-4e12-afc8-d3fd701fd7fb",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Clearing the env var\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.environment.unset(\"coupon_code\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/coupon/{{coupon_code}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"coupon",
								"{{coupon_code}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product Category",
			"item": [
				{
					"name": "productcategory",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2fc48ada-1635-4327-8f6b-30520dec7f5d",
								"exec": [
									"var p_id = pm.environment.get(\"parent_id\");\r",
									"if (!p_id) {\r",
									"    pm.environment.set(\"parent_id\", \"0\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1d7df871-cffe-4063-a039-879eef852c36",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"category_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Home Appliance\",\n\t\"value\": \"Home_Appliance\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-categories/{{parent_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-categories",
								"{{parent_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productcategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5680c500-e83f-4813-ae94-5ee9932e4b8e",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-category/{{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-category",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productcategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0906c95-3397-46f6-aded-1545d9363d78",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.name;\r",
									"    pm.expect(type).to.eql(\"Home\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Home\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-category/{{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-category",
								"{{category_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productcategory by parent name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c328fd02-ce24-4ace-9a67-28575aab80f2",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-categories/{{parent_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-categories",
								"{{parent_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productcategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e6c8b0b-ee20-4742-a57e-48d29a852965",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-category/{{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-category",
								"{{category_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Product Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d71dd471-f739-461d-8e2e-b53585211208",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"slug\", jsonData.data.slug);\r",
									"    pm.environment.set(\"product_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"shirts\",\n\t\"description\": \"Awesome Shirts\",\n\t\"price\": 100\n}"
						},
						"url": {
							"raw": "{{base_url}}/product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86756c98-ad1f-4dce-b40d-6eb902a3e66a",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product/{{slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product",
								"{{slug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec017259-dea9-4748-8042-7a31f257216b",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Double Awesome\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product/{{slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product",
								"{{slug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44679d31-3028-4fa3-a274-9b8e65dba738",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6412e70-3c92-4185-90af-f6b5c188cf00",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"products\": [{\n\t\t\"name\": \"shirts\",\n\t\t\"description\": \"Awesome Shirts\",\n\t\t\"price\": 100,\n\t\t\"attrs\": [{\n\t\t\t\"name\": \"color\",\n\t\t\t\"attrs_options\": [{\n\t\t\t\t\"name\": \"Red\",\n\t\t\t\t\"value\": \"red\",\n\t\t\t\t\"price_change\": 10\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Blue\",\n\t\t\t\t\"value\": \"blue\",\n\t\t\t\t\"price_change\": 5\n\t\t\t}]\n\t\t}]\n\t}]\n}"
						},
						"url": {
							"raw": "{{base_url}}/products",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b0c6215-34f3-4206-a331-60f160b0c72d",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product/{{slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product",
								"{{slug}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product Attributes",
			"item": [
				{
					"name": "Product Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c260425-a637-4d93-ae3e-ea7b253b2648",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"attr_name\", \"color\");\r",
									"    pm.environment.set(\"attr_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"color\",\n\t\"product_id\": \"{{product_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-attribute",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "829327d0-9398-4a54-9ae2-ca9a2e49ce14",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.name;\r",
									"    pm.expect(type).to.eql(color);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-attribute/{{attr_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute",
								"{{attr_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5f4699b-31b4-41d5-9ae3-d0f080201c4d",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.value;\r",
									"    pm.expect(type).to.eql(\"color\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"value\": \"color\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{base_url}}/product-attribute/{{attr_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute",
								"{{attr_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attrbiutes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c4aece1-0859-4d32-a629-62b79f1a4e46",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Unset the env variable\", function () {\r",
									"    if (pm.response.code == 200) {\r",
									"        pm.environment.unset(\"slug\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e9fb0366-da21-4b7a-b8d7-b72c1ea3c662",
								"exec": [
									"pm.environment.set(\"slug\", \"something\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-attributes/{{slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attributes",
								"{{slug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47275172-8da1-4a9c-9562-b0fa43e87149",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"// pm.test(\"Clearing the env var\", function () {\r",
									"//     var jsonData = pm.response.json();\r",
									"//     if (pm.response.code === 200) {\r",
									"//         pm.environment.unset(\"attr_name\");\r",
									"//     }\r",
									"// });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-attribute/{{attr_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute",
								"{{attr_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product Attributes Options",
			"item": [
				{
					"name": "Product Attribute Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aea7076e-7f24-444a-8b95-90c3995802fc",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"opt_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Red\",\n\t\"value\": \"red\",\n\t\"price_change\": 10,\n\t\"attr_id\": \"{{attr_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-attribute-option",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute-option"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attribute Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "287104f2-3bd9-41fe-9118-87f4000ac160",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{attr_opt_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-attribute-option/{{opt_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute-option",
								"{{opt_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attribute Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb1b6928-4157-4d88-82f7-0ac6718b7cb9",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Price should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.price_change;\r",
									"    pm.expect(type).to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{attr_opt_name}}\",\n\t\"price_change\": 5\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-attribute-option/{{opt_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute-option",
								"{{opt_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attrbiutes Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43a37961-7bf5-4add-bd44-124149e67aea",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-attribute-options/{{attr_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute-options",
								"{{attr_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Product Attribute Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c6dad4d-83a1-4e5b-b698-9155903a5ba5",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{attr_opt_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-attribute-option/{{opt_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-attribute-option",
								"{{opt_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product Image",
			"item": [
				{
					"name": "Product Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61d17a58-89fd-4775-81da-f8b39083719c",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image[]",
									"type": "file",
									"src": [
										"/C:/Users/astik.gabani/Pictures/Screenshots/Account Object Data Collection Splunk.png",
										"/C:/Users/astik.gabani/Pictures/Screenshots/Account Object Data Collection Workbanch.png",
										"/C:/Users/astik.gabani/Pictures/Screenshots/Screenshot (1).png",
										"/C:/Users/astik.gabani/Pictures/Screenshots/Screenshot (4).png"
									]
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/product-image/{{slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-image",
								"{{slug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Image name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64f34eb0-f68a-410c-a87b-ae64a3d72f0e",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"image_name\", jsonData[\"Product Images\"][0].image_name);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-image/{{slug}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-image",
								"{{slug}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ab0f01d-50ba-4ccf-8771-1683a21ad2bb",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-image/{{slug}}/{{image_name}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-image",
								"{{slug}}",
								"{{image_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c464ddb6-6d55-4e4c-9a02-20c872765567",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-image/{{slug}}/{{image_name}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-image",
								"{{slug}}",
								"{{image_name}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "616d4fd3-e09c-437e-964a-7841c6bd7d71",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"cart_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merge Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71db82bb-85fd-493f-979d-c3192a1b2823",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"cart_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart-merge/{{dummy_cart_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-merge",
								"{{dummy_cart_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cc4b789-6b7e-435c-93db-6f904b73f546",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var id = jsonData.data.id;\r",
									"    var cart_id = pm.variables.get(\"cart_id\");\r",
									"    pm.expect(id).to.eql(cart_id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bc2d7da-7a79-4b4b-9056-510f09802f61",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Clearing the env var\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.environment.unset(\"cart_id\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cart Item",
			"item": [
				{
					"name": "Cart Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eebfde98-0b21-4c8b-a9b3-4e08c19a8ab2",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"cart_item_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product_id\": \"{{product_id}}\",\n\t\"quantity\": 1,\n\t\"attr_option_id\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8480c12-24f7-4fce-8a78-8fb32a1b1d3a",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"cart_item_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/apply-coupon/{{coupon_code}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"apply-coupon",
								"{{coupon_code}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b54e4fb-5993-496c-af72-62586b6cb537",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "cartitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77c36afa-ce7b-4148-a98a-7f1f07387d75",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.quantity;\r",
									"    pm.expect(type).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product_id\": \"{{product_id}}\",\n\t\"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "cartitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60049efb-12ad-4093-b8f3-feb5b9ae613d",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product_id\": \"{{product_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dummy Cart",
			"item": [
				{
					"name": "Dummy Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edf0ad6d-474e-4503-8048-7e8f663b50c7",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"dummy_cart_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dummy Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7a0d615-f668-4e34-a150-435a09eba86e",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var id = jsonData.data.id;\r",
									"    var cart_id = pm.variables.get(\"cart_id\");\r",
									"    pm.expect(id).to.eql(cart_id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dummy Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5ebc621-1b9f-4740-8a0d-b2ca09c45902",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Clearing the env var\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (pm.response.code === 200) {\r",
									"        pm.environment.unset(\"cart_id\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{base_url}}/cart",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dummy Cart Item",
			"item": [
				{
					"name": "Cart Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a93f6ff-333c-4b7d-baf7-d24e2ff591ac",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"cart_item_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product_id\": \"{{product_id}}\",\n\t\"quantity\": 1\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cart Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0a7f20a-9b9b-4ed4-b99a-7dec88acc50c",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "cartitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d770f1b5-f609-41ec-95e7-915ba2d0a7ab",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.quantity;\r",
									"    pm.expect(type).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product_id\": \"{{product_id}}\",\n\t\"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "cartitem",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35cfcd4e-f544-461c-9ee5-5357118ebf88",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product_id\": \"{{product_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/cart-item",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cart-item"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product Review",
			"item": [
				{
					"name": "productreview",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ratings\": 5,\n\t\"comments\": \"Awesome\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-review/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-review",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productreview",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e14fcdb-0bc2-48fd-9069-b45fe937e9a9",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-review/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-review",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productreview All",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4493aea-b785-4f7a-b198-91b548adc822",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-reviews/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-reviews",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productreview",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a40fb98-fcdb-4e25-b1e9-beb507d5312e",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.ratings;\r",
									"    pm.expect(type).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ratings\": 4\n}"
						},
						"url": {
							"raw": "{{base_url}}/product-review/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-review",
								"{{product_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "productreview",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39c5b242-35e3-471b-8bef-56336ebbd590",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/product-review/{{product_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"product-review",
								"{{product_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Order Receiver",
			"item": [
				{
					"name": "orderreceiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ce8265f-e808-46bd-af5c-e81db5ee10cd",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"order_receiver_id\", jsonData.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\": \"Keval\",\n\t\"last_name\": \"Vithani\",\n\t\"phone_no\": \"8530981689\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/order-receiver",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order-receiver"
							]
						}
					},
					"response": []
				},
				{
					"name": "orderreceiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b9c8219-f604-41a6-8c88-d21c24ea3b76",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/order-receiver/{{order_receiver_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order-receiver",
								"{{order_receiver_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "orderreceiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9feff70-7146-4268-8eed-e04cd61dc2c1",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Type should be updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var type = jsonData.data.phone_no;\r",
									"    pm.expect(type).to.eql(9104836466);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phone_no\": 9104836466\n}"
						},
						"url": {
							"raw": "{{base_url}}/order-receiver/{{order_receiver_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order-receiver",
								"{{order_receiver_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "orderreceiver",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9cc23f64-fe64-40bf-90e8-ce750d36e3e0",
								"exec": [
									"pm.test(\"Response should be JSON\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"});\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{base_url}}/order-receiver/{{order_receiver_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order-receiver",
								"{{order_receiver_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shipping_cost\": 50,\n\t\"addresses\": [1, 2],\n\t\"order_receiver_id\": 1,\n\t\"address_type\": \"shipping\",\n\t\"shipping_address_id\": 2\n}\n"
						},
						"url": {
							"raw": "{{base_url}}/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "order",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/order/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "order",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{base_url}}/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}